# Copyright 2017 SchedMD LLC.
# Modified for use with the Slurm Resource Manager.
#
# Copyright 2015 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{% import "path_utils.jinja" as path_utils with context %}

{% set _ = properties.update({
    'project': env['project'],
    'compute_node_prefix': properties['cluster_name'] ~ '-compute',
    }) %}
{% set cluster_region =  '-'.join(properties['zone'].split('-')[:-1]) %}
{% set project = properties['project'] %}
{% set zone = properties['zone'] %}
{% set vpc_net = properties['vpc_net'] %}
{% set vpc_subnet = properties['vpc_subnet'] %}
{% set cluster_name = properties['cluster_name'] %}
{% set partitions = properties['partitions'] %}

{% set subnets = { (cluster_region, vpc_subnet): None } %}

{% for part in partitions %}
{% set region = '-'.join(part['zone'].split('-')[:-1]) %}
{% set _ = part.update({ 'region': region }) %}
{% set _ = subnets.update({ (region, part['vpc_subnet']): None }) %}
{% endfor %}

resources:
- name: controller
  type: vm_instance.py
  properties:
    instanceName: {{ cluster_name }}-controller
    zone: {{ zone }}
    machineType: {{ properties['controller_machine_type'] }}
    sourceImage: {{ properties['controller_image'] }}
    bootDiskType: {{ properties['controller_disk_type'] }}
    bootDiskSizeGb: {{ properties['controller_disk_size_gb'] }}
  {% if properties['controller_secondary_disk'] %}
    disks:
      - deviceName: secondary
        type: PERSISTENT
        autoDelete: TRUE
        initializeParams:
          diskType: {{ properties['controller_secondary_disk_type'] }}
          diskSizeGb: {{ properties['controller_secondary_disk_size_gb'] }}
  {% endif %}
    networks:
      - {{ vpc_net }}
    subnetworks:
      - {{ vpc_subnet }}
  {% if properties['external_controller_ip'] %}
    externalIPs:
      - EPHEMERAL
  {% else %}
    externalIPs:
      - NONE
  {% endif %}
    serviceAccounts:
      - email: {{ properties['controller_service_account'] }}
        scopes: {{ properties['controller_scopes'] }}
  {% if properties['controller_labels'] %}
    labels:
      {{ properties['controller_labels'] }}
  {% endif %}
    tags:
      items:
        - controller
    metadata:
      items:
        - key: config
          value: {{ properties|safe|tojson(2) }}
        - key: enable-oslogin
          value: "TRUE"
        - key: google-logging-enable
          value: TRUE
        - key: google-monitoring-enable
          value: TRUE
        - key: VmDnsSetting
          value: GlobalOnly
        - key: instance-type
          value: controller
        - key: startup-script
          value: |
            {{ imports['startup.sh']|indent(12) }}
        - key: setup-script
          value: |
            {{ imports['setup.py']|indent(12) }}
        - key: util-script
          value: |
            {{ imports['util.py']|indent(12) }}
        - key: slurm-resume
          value: |
            {{ imports['resume.py']|indent(12) }}
        - key: slurm-suspend
          value: |
            {{ imports['suspend.py']|indent(12) }}
        - key: slurmsync
          value: |
            {{ imports['slurmsync.py']|indent(12) }}
        - key: custom-controller-install
          value: |
            {{ imports['custom-controller-install']|indent(12) }}
        - key: custom-compute-install
          value: |
            {{ imports['custom-compute-install']|indent(12) }}
        - key: slurm_conf_tpl
          value: |
            {{ imports['slurm.conf.tpl']|indent(12) }}
        - key: slurmdbd_conf_tpl
          value: |
            {{ imports['slurmdbd.conf.tpl']|indent(12) }}
        - key: cgroup_conf_tpl
          value: |
            {{ imports['cgroup.conf.tpl']|indent(12) }}


{% for n in range(properties['login_node_count']) %}
- name: login{{ n }}
  type: vm_instance.py
  properties:
    instanceName: {{ cluster_name }}-login{{ n }}
    zone: {{ zone }}
    machineType: {{ properties['login_machine_type'] }}
    sourceImage: {{ properties['login_image'] }}
    bootDiskType: {{ properties['login_disk_type'] }}
    bootDiskSizeGb: {{ properties['login_disk_size_gb'] }}
    networks:
      - {{ vpc_net }}
    subnetworks:
      - {{ vpc_subnet }}
  {% if properties['external_login_ips'] %}
    externalIPs:
      - EPHEMERAL
  {% else %}
    externalIPs:
      - NONE
  {% endif %}
    serviceAccounts:
      - email: {{ properties['login_node_service_account'] }}
        scopes:
          {{ properties['login_node_scopes'] }}
  {% if properties['login_labels'] %}
    labels:
      {{ properties['login_labels'] }}
  {% endif %}
    tags:
      items:
        - login
    metadata:
      items:
        - key: config
          value: {{ properties|safe|tojson(2) }}
        - key: enable-oslogin
          value: "TRUE"
        - key: google-logging-enable
          value: TRUE
        - key: google-monitoring-enable
          value: TRUE
        - key: VmDnsSetting
          value: GlobalOnly
        - key: startup-script
          value: |
            {{ imports['startup.sh']|indent(12) }}
        - key: setup-script
          value: |
            {{ imports['setup.py']|indent(12) }}
        - key: util-script
          value: |
            {{ imports['util.py']|indent(12) }}
{% endfor %}

{% for part in partitions %}
{% set i = loop.index0 %}
{% set region = part['region'] %}
{% set subnet = part['vpc_subnet'] %}
{% set zone = part['zone'] %}

{% for n in range(part['static_node_count']) %}
- name: static-compute-{{ i }}-{{ n }}
  type: vm_instance.py
  properties:
    instanceName: {{ properties['compute_node_prefix'] }}-{{ i }}-{{ n }}
    zone: {{ zone }}
    machineType: {{ part['machine_type'] }}
    sourceImage: {{ part['image'] }}
    bootDiskType: {{ part['compute_disk_type'] }}
    bootDiskSizeGb: {{ part['compute_disk_size_gb'] }}
    networks:
      - {{ vpc_net }}
    subnetworks:
      - {{ vpc_subnet }}
  {% if properties['external_compute_ips'] %}
    externalIPs:
      - EPHEMERAL
  {% else %}
    externalIPs:
      - NONE
  {% endif %}
  {% if part['gpu_count'] %}
    guestAccelerators:
      - acceleratorType: {{ part['gpu_type'] }}
        acceleratorCount: {{ part['gpu_count'] }}
    scheduling:
      onHostMaintenance: TERMINATE
  {% endif %}
    serviceAccounts:
      - email: {{ properties['compute_node_service_account'] }}
        scopes:
          {{ properties['compute_node_scopes'] }}
  {% if part['labels'] %}
    labels:
      {{ part['labels'] }}
  {% endif %}
    tags:
      items:
        - compute
    metadata:
      items:
        - key: config
          value: {{ properties|safe|tojson(2) }}
        - key: enable-oslogin
          value: "TRUE"
        - key: google-logging-enable
          value: TRUE
        - key: google-monitoring-enable
          value: TRUE
        - key: VmDnsSetting
          value: GlobalOnly
        - key: instance-type
          value: compute
      {% if not part['image_hyperthreads'] %}
        - key: google_mpi_tuning
          value: --nosmt
      {% endif %}
        - key: startup-script
          value: |
            {{ imports['startup.sh']|indent(12) }}
        - key: setup-script
          value: |
            {{ imports['setup.py']|indent(12) }}
        - key: util-script
          value: |
            {{ imports['util.py']|indent(12) }}
        - key: custom-compute-install
          value: |
            {{ imports['custom-compute-install']|indent(12) }}
{% endfor %}

{% endfor %}

outputs:
  - name: controller-id
    value: $(ref.{{ cluster_name }}-controller.id)
  - name: controller-name
    value: {{ cluster_name }}-controller
  - name: controller-internal-ip
    value: $(ref.controller.internalIP)
  - name: controller-ip
  {% if properties['controller_external_ip'] %}
    value: $(ref.controller.ip)
  {% else %}
    value: NONE
  {% endif %}
  - name: controller-link
    value: $(ref.{{ cluster_name }}-controller.selfLink)

  - name: login_node_count
    value: {{ properties['login_node_count'] }}
{% for n in range(properties['login_node_count']) %}
  {% set name = 'login' ~ n %}
  {% set vm_name = cluster_name ~ '-' ~ name %}
  - name: {{ name }}-id
    value: $(ref.{{ vm_name }}.id)
  - name: {{ name }}-name
    value: {{ vm_name }}
  - name: {{ name }}-internal-ip
    value: $(ref.{{ name }}.internalIP)
  - name: {{ name }}-ip
  {% if properties['login_external_ips'] %}
    value: $(ref.{{ name }}.ip)
  {% else %}
    value: NONE
  {% endif %}
  - name: {{ name }}-link
    value: $(ref.{{ vm_name }}.selfLink)
{% endfor %}

{% for part in partitions %}
{% set i = loop.index0 %}
{% for n in range(part['static_node_count']) %}
  {% set name = 'static-compute-{}-{}'.format(i, n)  %}
  {% set vm_name = '{}-{}-{}'.format(properties['compute_node_prefix'], i, n) %}
  - name: {{ name }}-id
    value: $(ref.{{ vm_name }}.id)
  - name: {{ name }}-name
    value: {{ vm_name }}
  - name: {{ name }}-internal-ip
    value: $(ref.{{ name }}.internalIP)
  - name: {{ name }}-ip
  {% if properties['external_compute_ips'] %}
    value: $(ref.{{ name }}.ip)
  {% else %}
    value: NONE
  {% endif %}
  - name: {{ name }}-link
    value: $(ref.{{ vm_name }}.selfLink)
{% endfor %}
{% endfor %}
